#!/usr/bin/python3

# -*- coding: utf-8 -*-

# Copyright (c) 2018 Jared Daniel Carbonell Recomendable. All rights reserved.

import os
import getpass
import sys
import subprocess

def get_username():
    '''Return the username of the currently logged in user.'''
    return getpass.getuser()

def list_dir():
    '''Return a sorted list of directories in the current working directory.'''
    return sorted(os.listdir())

def prep_str(flag, nav_flag=-1):
    '''Prepares the string to pass into the bash shell later to open the appropriate directory in Nautilus.'''
    # Administrative Activiteis
    string = '/home/{}/Dropbox/'.format(get_username())
    os.chdir(string)

    # Deal with HOME Contents
    if flag == 0:
        string += 'HOME/'
        os.chdir(string)
        count = 3
        while count > 0:
            string += str(list_dir()[-1]) + '/'
            os.chdir(string)
            count -= 1

    # Deal with YIJC
    elif flag == 1:
        string += 'YIJC/'

    # Deal with Projects
    elif flag == 3:
        string += 'Projects/'
        os.chdir(string)
        count = 3
        while count > 0:
            string += str(list_dir()[-1]) + '/'
            os.chdir(string)
            count -= 1

    # Deal with YIJC 2018 Contents
    elif flag == 2:
        string += 'YIJC/2018/'
        if nav_flag == 0:
            string += '0ADMIN/'
            os.chdir(string)
            count = 3
            while count > 0:
                string += str(list_dir()[-1]) + '/'
                os.chdir(string)
                count -= 1
        elif nav_flag == 1:
            string += '1GP/'
            os.chdir(string)
            count = 3
            while count > 0:
                string += str(list_dir()[-1]) + '/'
                os.chdir(string)
                count -= 1
        elif nav_flag == 2:
            string += '2PW/'
        elif nav_flag == 3:
            string += '3MA/'
            os.chdir(string)
            count = 3
            while count > 0:
                string += str(list_dir()[-1]) + '/'
                os.chdir(string)
                count -= 1
        elif nav_flag == 4:
            string += '4PH/'
            os.chdir(string)
            count = 3
            while count > 0:
                string += str(list_dir()[-1]) + '/'
                os.chdir(string)
                count -= 1
        elif nav_flag == 5:
            string += '5CP/'
            os.chdir(string)
            count = 3
            while count > 0:
                string += str(list_dir()[-1]) + '/'
                os.chdir(string)
                count -= 1
        elif nav_flag == 6:
            string += '6EC/'
            os.chdir(string)
            count = 3
            while count > 0:
                string += str(list_dir()[-1]) + '/'
                os.chdir(string)
                count -= 1
        elif nav_flag == 7:
            string += '7CCA/'
            os.chdir(string)
            count = 3
            while count > 0:
                string += str(list_dir()[-1]) + '/'
                os.chdir(string)
                count -= 1
        else:
            return 1, 'ERROR'

    else:
        return 1, 'ERROR'

    # Assist Bash to recognise spaces
    new_string = string.split(' ')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\ '

    # Assist Bash to recognise apostrophes
    new_string = string.split("'")
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + "\\'"

    # Assist Bash to recognise double-quotation marks
    new_string = string.split('"')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\"'

    # Assist Bash to recognise opening bracket (
    new_string = string.split('(')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\('

    # Assist Bash to recognise opening bracket [
    new_string = string.split('[')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\['

    # Assist Bash to recognise opening bracket <
    new_string = string.split('<')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\<'

    # Assist Bash to recognise opening bracket {
    new_string = string.split('{')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\{'

    # Assist Bash to recognise closing bracket )
    new_string = string.split(')')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\)'

    # Assist Bash to recognise closing bracket ]
    new_string = string.split(']')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\]'

    # Assist Bash to recognise closing bracket >
    new_string = string.split('>')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\>'

    # Assist Bash to recognise closing bracket }
    new_string = string.split('}')
    string = ''
    if len(new_string) == 1:
        string = new_string[0]
    else:
        for i in range(len(new_string)):
            if i == len(new_string) - 1:
                string += new_string[i]
            else:
                string += new_string[i] + '\\}'

    return 0, string

def run(flag, nav_flag=-1):
    '''Carry out the process of navigating to the latest directory based on user's entered arguments. This is the first function called when the program is run in the terminal.'''
    result = prep_str(flag, nav_flag)
    if result[0] == 0:
        to_run = 'nautilus {}'.format(result[1])
        subprocess.run(['bash', '-c', to_run])
    else:
        show_help()

def show_help():
    '''Show the help documentation for the program.'''
    help_doc = '''Usage: cdl [options] [directories]

Options:
  -h, --help        show this help message and exit
  -H, --home        go to the latest directory in ~/Dropbox/HOME/
  -P, --projects    go to the latest directory in ~/Dropbox/Projects/
  -Y, --yijc        go to ~/Dropbox/YIJC/
  -n, --nav         based on the given directories flag, go to the latest respective directory in ~/Dropbox/YIJC/

Directories (can be called when -n flag is passed into the program):
  18admin           go to the latest directory in ~/Dropbox/YIJC/2018/0ADMIN
  18gp              go to the latest directory in ~/Dropbox/YIJC/2018/1GP
  18pw              go to the latest directory in ~/Dropbox/YIJC/2018/2PW
  18ma              go to the latest directory in ~/Dropbox/YIJC/2018/3MA
  18ph              go to the latest directory in ~/Dropbox/YIJC/2018/4PH
  18cp              go to the latest directory in ~/Dropbox/YIJC/2018/5CP
  18ec              go to the latest directory in ~/Dropbox/YIJC/2018/6EC
  18cca             go to the latest directory in ~/Dropbox/YIJC/2018/7CCA'''
    print(help_doc)

if __name__ == '__main__':
    if len(sys.argv) == 2:
        if sys.argv[1] in ('-h', '--help', 'h', 'help'):
            show_help()
        elif sys.argv[1] in ('-H', '--home'):
            run(0)
        elif sys.argv[1] in ('-Y', '--yijc'):
            run(1)
        elif sys.argv[1] in ('-P', '--projects'):
            run(3)
        else:
            show_help()
    elif len(sys.argv) == 3:
        if sys.argv[1] in ('-n', '--nav'):
            if sys.argv[2] == '18admin':
                run(2,0)
            elif sys.argv[2] == '18gp':
                run(2,1)
            elif sys.argv[2] == '18pw':
                run(2,2)
            elif sys.argv[2] == '18ma':
                run(2,3)
            elif sys.argv[2] == '18ph':
                run(2,4)
            elif sys.argv[2] == '18cp':
                run(2,5)
            elif sys.argv[2] == '18ec':
                run(2,6)
            elif sys.argv[2] == '18cca':
                run(2,7)
            else:
                show_help()
        else:
            show_help()
    else:
        show_help()
