#!/usr/bin/env python3

# -*- coding: utf-8 -*-

# Copyright (c) 2020 Jared Daniel Carbonell Recomendable.


from getpass import getuser
import os
import sys
import subprocess


# Computer-specific constants
FILE_MANAGER_CMD = 'open'
HOME_DIR = 'Users'
USERNAME = getuser()
DROPBOX_DIR = '/{}/{}/Dropbox/'.format(HOME_DIR, USERNAME)


# File locations
# Structure:
#     'CMD_PARAM': [AUTO_NAV_DEPTH, 'RELATIVE FILE_LOCATION']
NAV_DIRS = {
        # Root Level
        'h': [3, 'HOME'],
        'm': [0, 'Media'],
        'p': [3, 'Projects'],
        'u': [0, 'UoA'],
        'w': [0, 'WORK'],

        # Frequent Directories
        'u-admin'  : [3, 'UoA/ADMIN'],
        'u-books'  : [1, 'UoA/BOOKS'],
        'u-clubs'  : [0, 'UoA/CLUBS'],
        'u-courses': [1, 'UoA/COURSES'],
        'u-extcurr': [0, 'UoA/EXTCURR'],
        'u-work'   : [1, 'UoA/WORK'],
        'u-mi2020' : [2, 'UoA/WORK/2020-SUMMER/UoA Micro-Internship'],
        'w-b'      : [4, 'WORK/Bestcoder'],
        'u-201b'   : [0, 'UoA/BOOKS/2021-S1/COMPSYS201'],
        'u-211b'   : [0, 'UoA/BOOKS/2021-S1/ENGSCI211'],
        'u-281b'   : [0, 'UoA/BOOKS/2021-S1/SOFTENG281'],
        'u-282b'   : [0, 'UoA/BOOKS/2021-S1/SOFTENG282'],
        'u-204b'   : [0, 'UoA/BOOKS/2021-S2/ENGGEN204'],
        'u-206b'   : [0, 'UoA/BOOKS/2021-S2/SOFTENG206'],
        'u-283b'   : [0, 'UoA/BOOKS/2021-S2/SOFTENG283'],
        'u-284b'   : [0, 'UoA/BOOKS/2021-S2/SOFTENG284'],
        'u-201'    : [2, 'UoA/COURSES/2021-S1/COMPSYS201'],
        'u-211'    : [2, 'UoA/COURSES/2021-S1/ENGSCI211'],
        'u-281'    : [2, 'UoA/COURSES/2021-S1/SOFTENG281'],
        'u-282'    : [2, 'UoA/COURSES/2021-S1/SOFTENG282'],
        'u-204'    : [2, 'UoA/COURSES/2021-S2/ENGGEN204'],
        'u-206'    : [2, 'UoA/COURSES/2021-S2/SOFTENG206'],
        'u-283'    : [2, 'UoA/COURSES/2021-S2/SOFTENG283'],
        'u-284'    : [2, 'UoA/COURSES/2021-S2/SOFTENG284'],
}


# Utility Functions
def list_dir():
    '''List directories in current working directory, ascending order.'''
    return sorted(os.listdir())

def auto_nav(target_dir, auto_nav_depth):
    '''Navigate to latest folder.'''
    os.chdir(target_dir)
    target_dir += '/'
    while auto_nav_depth > 0:
        target_dir += str(list_dir()[-1]) + '/'
        os.chdir(target_dir)
        auto_nav_depth -= 1
    return target_dir

def parse_dir_path(cmd_param):
    '''Parse absolute path to target directory.'''
    auto_nav_depth, relative_target_dir = NAV_DIRS[cmd_param]
    target_dir = DROPBOX_DIR + relative_target_dir
    return auto_nav(target_dir, auto_nav_depth)

def parse_cmd(dir_path):
    return '{} "{}"'.format(FILE_MANAGER_CMD, dir_path)

def run(cmd):
    '''Send command to shell.'''
    subprocess.Popen(['bash', '-c', cmd])

def form_help_doc():
    '''Return help documenation.'''
    doc = 'Usage: cdl [options]\n\nOptions:\n'
    for key in NAV_DIRS:
        doc += '  {:10} go to ~/Dropbox/{}\n'.format(key, NAV_DIRS[key][1])
    return doc


# Main
if __name__ == '__main__':
    if len(sys.argv) == 2:
        cmd_param = sys.argv[1]
        if cmd_param in NAV_DIRS:
            dir_path = parse_dir_path(cmd_param)
            command = parse_cmd(dir_path)
            print('OPENING "{}"'.format(dir_path))
            run(command)
        elif cmd_param in ('-h', '--help'):
            print(form_help_doc())
        else:
            print('Argument not supported.')
